小结：
1，摘要算法用来实现完整性，能够为数据生成独一无二的“指纹”，常用的算法是 SHA - 2；
2，数字签名是私钥对摘要的加密，可以由公钥解密后验证，实现身份认证和不可否认；
3，公钥的分发需要使用数字证书，必须由 CA 的信任链来验证，否则就是不可信的；
4，作为信任链的源头 CA 有时也会不可信，解决办法有 CRL、OCSP，还有终止信任。

为什么公钥能够建立信任链，用对称加密算法里的对称密钥行不行呢？
非加密算法需要公开公钥从而让客户端能解密。如果用对称加密，加密秘钥公开，就达不到加密效果了

假设有一个三级的证书体系（Root CA => 一级 CA => 二级 CA），你能详细解释一下证书信任链的验证过程吗？
户端发现当前网站的证书是二级CA，在可信任签发机构中找不到，就会去拿二级CA的数字证书的签发机构去做检查，发现它是一级CA，也不在可信任签发机构中，
再找一级CA的数字证书的签发机构，发现是受信任的ROOT CA，至此完成验证。如果到最后一层CA都不受信任，就会警告用户（根证书预置在浏览器中）

加密过程
看了几遍大概了解为什么要这样加密的过程了
↓ 对称加密（有密钥交换的问题）
↓ 非对称加密（基于复杂的数学难题，运行速度很慢）
↓ 混合加密（怎么保证完整性？不被修改？）
↓ 摘要算法（无法保证是用户自己）
↓ 数字签名（公钥怎么保证安全正确的？）
↓ 数字证书、CA

摘要算法：它能够把任意长度的数据“压缩”成固定长度、而且独一无二的“摘要”字符串，将它上传服务器后，
服务器也会计算一下消息的摘要，进行对比。

数字签名：黑客也可以伪装成你，向网站发送支付、转账等消息

数字证书和CA：公钥的信任”问题。因为谁都可以发布公钥，我们还缺少防止黑客伪造公钥的手段，
也就是说，怎么来判断这个公钥就是你或者某宝的公钥呢？